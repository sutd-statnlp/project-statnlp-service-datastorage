{
    "swagger": "2.0",
    "info": {
        "description": "StatNLP Service",
        "version": "1.0.0",
        "title": "Object Storage"
    },
    "basePath": "",
    "tags": [{
        "name": "user",
        "description": "User"
    }, {
        "name": "object",
        "description": "Objects in Data Storage"
    }],
    "schemes": ["http"],
    "paths": {
        "/login": {
            "post": {
                "tags": ["user"],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": ["application/xml", "application/json"],
                "parameters": [{
                    "name": "username",
                    "in": "formData",
                    "description": "The user name for login",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "password",
                    "in": "formData",
                    "description": "The password for login in clear text",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/api/objects": {
            "get": {
                "tags": ["object"],
                "summary": "Find object's names",
                "description": "Returns a object name list",
                "operationId": "findObjectNames",
                "produces": ["application/xml", "application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Object not found"
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/objects/{objectName}": {
            "get": {
                "tags": ["object"],
                "summary": "Find objects",
                "description": "Returns a object list",
                "operationId": "findObjects",
                "produces": ["application/xml", "application/json"],
                "parameters": [{
                    "name": "objectName",
                    "in": "path",
                    "description": "Name of object to return",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Object not found"
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            },
            "post": {
                "tags": ["object"],
                "summary": "Add a new object to the store",
                "description": "",
                "operationId": "addObject",
                "consumes": ["application/json", "application/xml"],
                "produces": ["application/xml", "application/json"],
                "parameters": [{
                    "name": "objectName",
                    "in": "path",
                    "description": "Name of object to return",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "body",
                    "description": "Object object that needs to be added to the store",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Object"
                    }
                }],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/objects/{objectName}/{objectId}": {
            "get": {
                "tags": ["object"],
                "summary": "Find object by ID",
                "description": "Returns a single object",
                "operationId": "findObjectById",
                "produces": ["application/xml", "application/json"],
                "parameters": [{
                    "name": "objectName",
                    "in": "path",
                    "description": "Name of object to return",
                    "required": true,
                    "type": "string"
                },{
                    "name": "objectId",
                    "in": "path",
                    "description": "ID of object to return",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Object not found"
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            },
            "put": {
                "tags": ["object"],
                "summary": "Update an existing object",
                "description": "",
                "operationId": "updateObject",
                "consumes": ["application/json", "application/xml"],
                "produces": ["application/xml", "application/json"],
                "parameters": [{
                    "name": "objectName",
                    "in": "path",
                    "description": "Name of object to return",
                    "required": true,
                    "type": "string"
                },{
                    "name": "objectId",
                    "in": "path",
                    "description": "ID of object to return",
                    "required": true,
                    "type": "string"
                },{
                    "in": "body",
                    "name": "body",
                    "description": "Object object that needs to be updated to the store",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Object"
                    }
                }],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            },
            "delete": {
                "tags": ["object"],
                "summary": "Deletes a object",
                "description": "",
                "operationId": "deleteObject",
                "produces": ["application/xml", "application/json"],
                "parameters": [{
                    "name": "objectName",
                    "in": "path",
                    "description": "Name of object to return",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "objectId",
                    "in": "path",
                    "description": "Object id to delete",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Object not found"
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Login admin:admin, then copy the token and enter value: Bearer {token}"
        }
    },
    "definitions": { 
        "Object": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "kaka"
                }
            },
            "xml": {
                "name": "Object"
            }
        },
        "ObjectUpdate": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "ID": {
                    "type": "string",
                    "example": "0101b506-2092-4e93-8fc5-3afb8de0e540"
                },
                "CreatedAt": {
                    "type": "string",
                    "example": "2018-05-28T10:22:36+08:00"
                },
                "UpdatedAt": {
                    "type": "string",
                    "example": "2018-05-28T10:22:36+08:00"
                },
                "Extra": {
                    "type": "string",
                    "example": {
                        "name" : "Kaka"
                    }
                }
            },
            "xml": {
                "name": "Object"
            }
        }
    }
}